name: pandoc

on:
  push:
    branches: use-crane-update-test
    paths:
      - 'pandoc/*'
      - '.github/workflows/pandoc.yml'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: prepare
        id: prepare
        run: |
          REPO="ghcr.io/${{ github.repository_owner }}/pandoc"
          COMMIT="$(git rev-parse --short HEAD)"
          echo ::set-output name=repo::${REPO}
          echo ::set-output name=commit::${COMMIT}
      - name: docker build
        run: |
          docker build -t ${{ steps.prepare.outputs.repo }}:${{ steps.prepare.outputs.commit }} pandoc/
      - name: docker login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.RELEASE_GHCR_USER_NAME }}
          password: ${{ secrets.RELEASE_GHCR_USER_TOKEN }}
      - name: crane copy
        run: |
          # Ensure crane installed
          crane help > /dev/null || ( set -x && \
            curl -LO "${CRANE_RELEASE_URL}" && CRANE_RELEASE_FILENAME="${CRANE_RELEASE_URL##*/}" && \
            shasum -a 256 "${CRANE_RELEASE_FILENAME}" | grep "^${CRANE_RELEASE_SHA256}  " && \
            mkdir testbin/ && cat "${CRANE_RELEASE_FILENAME}" | tar xz -C ./testbin crane && \
            export PATH="${PATH}:${PWD}/testbin" && ls -la testbin/ && crane help > /dev/null )

          REF="${{ steps.prepare.outputs.repo }}:${{ steps.prepare.outputs.commit }}"
          TAG="$(docker run --rm --entrypoint /usr/bin/rpm ${REF} -q --queryformat "%{version}-%{release}.%{arch}" pandoc)"
          crane copy ${REF} ${{ steps.prepare.outputs.repo }}:${TAG}
        env:
          CRANE_RELEASE_URL: https://github.com/google/go-containerregistry/releases/download/v0.6.0/go-containerregistry_Linux_x86_64.tar.gz
          CRANE_RELEASE_SHA256: b71c7ca16abff07787516efbe0c06c129d273f34490d6a85f815cec980fffe85
      - name: clear
        if: always()
        run: |
          rm -f ${HOME}/.docker/config.json
